/*
 * Frame_Principal.java
 *
 * Created on 5 de Abril de 2008, 01:46
 */
import javax.swing.AbstractButton;
import javax.swing.JFileChooser; 
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import controlcharts.GenericChartLimits;
import controlcharts.MedianChartLimits;
import controlcharts.RegressionChartLimits;

import org.jfree.chart.ChartFrame;

import controlcharts.StandardDeviationChartLimits;
import data.DataSetCsvIterator;
import data.DataSetException;
import data.DataSetIterate;

import java.io.File;


import statistic.CusumStatistic;
import statistic.GenericStatistic;
import statistic.MedianStatistic;
import statistic.RegressionStatistic;
import statistic.StandardDeviationStatistic;
import types.DataConverter;
import types.DoubleDataConverter;

import java.awt.Dimension;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.EventListener;

/**
 *
 * @author  Administrador
 */
public class Main extends javax.swing.JFrame {

	/** Creates new form Frame_Principal */
	public Main() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        basic_statistic = new javax.swing.JMenuItem();
        normality_test = new javax.swing.JMenuItem();
        control_chart = new javax.swing.JMenu();
        control_charMedian = new javax.swing.JMenuItem();
        regression = new javax.swing.JMenuItem();
        cusum = new javax.swing.JMenuItem();
        xmr = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estatístico de Qualidade - CEQ");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setName("frame_principal"); // NOI18N
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletar(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jSeparator2.setAutoscrolls(true);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 620, 1000, 30);

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Statistic");

        basic_statistic.setText("Basic Statistic");
        basic_statistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasicStatisticActionPerformed(evt);
            }
        });
        jMenu2.add(basic_statistic);

        normality_test.setLabel("Normality Test");
        jMenu2.add(normality_test);
        normality_test.getAccessibleContext().setAccessibleName("item");

        control_chart.setText("Control Chart");
        control_chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                control_chartActionPerformed(evt);
            }
        });

        control_charMedian.setText("Median");
        control_charMedian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                control_charMedianActionPerformed(evt);
            }
        });
        control_chart.add(control_charMedian);

        regression.setText("Regression");
        regression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regressionActionPerformed(evt);
            }
        });
        control_chart.add(regression);

        cusum.setText("Cumulative Sum");
        cusum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusumActionPerformed(evt);
            }
        });
        control_chart.add(cusum);

        xmr.setText("Individual Moving Range");
        xmr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xmrActionPerformed(evt);
            }
        });
        control_chart.add(xmr);

        jMenu2.add(control_chart);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1000)/2, (screenSize.height-700)/2, 1000, 700);
    }// </editor-fold>//GEN-END:initComponents

	private void regression_control_chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regression_control_chartActionPerformed
//		TODO add your handling code here:    	
		RegressionStatistic statistic = new RegressionStatistic();
		RegressionChartLimits limites = null; 
		File arquivo = OpenActionPerformed(evt);
		ChartFrame frame;
		try 
		{
			frame = new ChartFrame("Gerando Gráfico", GenerateGraphs.lineChart(statistic, arquivo,limites));
			Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();                          
			frame.setLocation(200,200);                
			frame.pack();
			frame.setVisible(true);
		}
		catch (DataSetException e) 
		{
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, e.getMessage());
		}
		//frame.setLocationByPlatform(true);

}//GEN-LAST:event_regression_control_chartActionPerformed

private void median_control_chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_median_control_chartActionPerformed
//	TODO add your handling code here:
	SelectEstimator control_chartMedia = new SelectEstimator(this);		
	control_chartMedia.show(true);
	
}//GEN-LAST:event_median_control_chartActionPerformed


private void deletar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletar
//	TODO add your handling code here:

}//GEN-LAST:event_deletar

private void standard_desviationActionPerformed(java.awt.event.ActionEvent evt) throws DataSetException {//GEN-FIRST:event_standard_desviationActionPerformed
//	TODO add your handling code here:

	GenericStatistic statistic = new StandardDeviationStatistic(true);
	StandardDeviationChartLimits limites = new StandardDeviationChartLimits(); 
	File arquivo = OpenActionPerformed(evt);
	ChartFrame frame = new ChartFrame("Gerando Gráfico", GenerateGraphs.lineChart(statistic, arquivo,limites));
	//frame.setLocationByPlatform(true);
	Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();                
	frame.pack();
	frame.setVisible(true);
}//GEN-LAST:event_standard_desviationActionPerformed

private void control_charMediantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_control_charMediantActionPerformed
//	TODO add your handling code here:
	            
}//GEN-LAST:event_control_charMediantActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//	TODO add your handling code here:
}//GEN-LAST:event_formWindowOpened

private void BasicStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasicStatisticActionPerformed
//	TODO add your handling code here:
	File arquivo = abrirArquivo();
	DataConverter conversor_long = new DoubleDataConverter();
	DataSetIterate data_set = new DataSetCsvIterator(arquivo,conversor_long,false,null);
	BasicStatistic interface_statistic_basics;
	try {
		interface_statistic_basics = new BasicStatistic(data_set);
		interface_statistic_basics.setVisible(true);
	} catch (DataSetException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
}//GEN-LAST:event_BasicStatisticActionPerformed


private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
//	TODO add your handling code here:
	System.exit(EXIT_ON_CLOSE);
}//GEN-LAST:event_ExitActionPerformed

private File OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
	return this.abrirArquivo();
}//GEN-LAST:event_OpenActionPerformed

private void regressionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regressionActionPerformed
    // TODO add your handling code here:
  	    RegressionStatistic statistic = new RegressionStatistic();
		RegressionChartLimits limites = null; 
		File arquivo = OpenActionPerformed(evt);
		ChartFrame frame;
		try 
		{
			frame = new ChartFrame("Gerando Gráfico", GenerateGraphs.lineChart(statistic, arquivo,limites));
			Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();                          
			frame.setLocation(200,200);                
			frame.pack();
			frame.setVisible(true);
		}
		catch (DataSetException e) 
		{
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, e.getMessage());
		}
		//frame.setLocationByPlatform(true);
                     
}//GEN-LAST:event_regressionActionPerformed

private void control_chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_control_chartActionPerformed
    // TODO add your handling code here:
    	SelectEstimator control_chart = new SelectEstimator(this);		
	control_chart.show(true);   
}//GEN-LAST:event_control_chartActionPerformed

private void control_charMedianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_control_charMedianActionPerformed
    // TODO add your handling code here:
    SelectEstimator control_chart = new SelectEstimator(this);		
    control_chart.show(true);   
}//GEN-LAST:event_control_charMedianActionPerformed

private void cusumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusumActionPerformed
    // TODO add your handling code here:
	CusumStatistic statistic = new CusumStatistic(true);
	//mudar
	RegressionChartLimits limites = null; 
	File arquivo = OpenActionPerformed(evt);
	ChartFrame frame;
	try 
	{
		frame = new ChartFrame("Gerando Gráfico", GenerateGraphs.lineChart(statistic, arquivo,limites));
		Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();                          
		frame.setLocation(200,200);                
		frame.pack();
		frame.setVisible(true);
	}
	catch (DataSetException e) 
	{
		e.printStackTrace();
		JOptionPane.showMessageDialog(this, e.getMessage());
	}
}//GEN-LAST:event_cusumActionPerformed

private void xmrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xmrActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_xmrActionPerformed

public static File abrirArquivo()
{
	JFileChooser chooser = new JFileChooser();
	chooser.showOpenDialog(null);
	File arquivo = chooser.getSelectedFile();

	if(arquivo==null)
	{
		System.out.println("Arquivo null");
	}
	return arquivo;
}

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
	java.awt.EventQueue.invokeLater(new Runnable() {
		public void run() {
			new Main().setVisible(true);   				

		}
	});
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem basic_statistic;
    private javax.swing.JMenuItem control_charMedian;
    private javax.swing.JMenu control_chart;
    private javax.swing.JMenuItem cusum;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem normality_test;
    private javax.swing.JMenuItem regression;
    private javax.swing.JMenuItem xmr;
    // End of variables declaration//GEN-END:variables

}
